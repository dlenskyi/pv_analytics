# Generated by Django 3.1.3 on 2020-11-14 16:09

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.CharField(max_length=250, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=20)),
                ('data_header', models.TextField(blank=True, null=True)),
                ('site_id', models.IntegerField()),
                ('is_border', models.BooleanField(blank=True, null=True)),
                ('type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'equipment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ForecastLogbook',
            fields=[
                ('id', models.CharField(max_length=250, primary_key=True, serialize=False, unique=True)),
                ('supplier', models.CharField(blank=True, max_length=15, null=True)),
                ('site_id', models.IntegerField(blank=True, null=True)),
                ('issued_utc', models.DateTimeField(blank=True, null=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('file_name', models.CharField(blank=True, max_length=70, null=True)),
            ],
            options={
                'db_table': 'forecast_logbook',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InverterData',
            fields=[
                ('id', models.CharField(max_length=250, primary_key=True, serialize=False, unique=True)),
                ('device_id', models.CharField(max_length=25)),
                ('timestamp_utc', models.DateTimeField()),
                ('t_inside', models.FloatField(blank=True, null=True)),
                ('u_ac_1', models.FloatField(blank=True, null=True)),
                ('u_ac_2', models.FloatField(blank=True, null=True)),
                ('u_ac_3', models.FloatField(blank=True, null=True)),
                ('i_ac_1', models.FloatField(blank=True, null=True)),
                ('i_ac_2', models.FloatField(blank=True, null=True)),
                ('i_ac_3', models.FloatField(blank=True, null=True)),
                ('p_ac', models.FloatField(blank=True, null=True)),
                ('q_ac', models.FloatField(blank=True, null=True)),
                ('cosphi', models.FloatField(blank=True, null=True)),
                ('frequency', models.FloatField(blank=True, null=True)),
                ('u_dc', models.FloatField(blank=True, null=True)),
                ('i_dc', models.FloatField(blank=True, null=True)),
                ('i_dc_1', models.FloatField(blank=True, null=True)),
                ('i_dc_2', models.FloatField(blank=True, null=True)),
                ('i_dc_3', models.FloatField(blank=True, null=True)),
                ('i_dc_4', models.FloatField(blank=True, null=True)),
                ('i_dc_5', models.FloatField(blank=True, null=True)),
                ('i_dc_6', models.FloatField(blank=True, null=True)),
                ('i_dc_7', models.FloatField(blank=True, null=True)),
                ('i_dc_8', models.FloatField(blank=True, null=True)),
                ('i_dc_9', models.FloatField(blank=True, null=True)),
                ('p_dc', models.FloatField(blank=True, null=True)),
                ('up_to_energy', models.FloatField(blank=True, null=True)),
                ('iso_resistance', models.FloatField(blank=True, null=True)),
                ('total_energy', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'inverter_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InverterDataTest',
            fields=[
                ('id', models.CharField(max_length=250, primary_key=True, serialize=False, unique=True)),
                ('device_id', models.CharField(max_length=25)),
                ('timestamp_utc', models.DateTimeField()),
                ('t_inside', models.FloatField(blank=True, null=True)),
                ('u_ac_1', models.FloatField(blank=True, null=True)),
                ('u_ac_2', models.FloatField(blank=True, null=True)),
                ('u_ac_3', models.FloatField(blank=True, null=True)),
                ('i_ac_1', models.FloatField(blank=True, null=True)),
                ('i_ac_2', models.FloatField(blank=True, null=True)),
                ('i_ac_3', models.FloatField(blank=True, null=True)),
                ('p_ac', models.FloatField(blank=True, null=True)),
                ('q_ac', models.FloatField(blank=True, null=True)),
                ('cosphi', models.FloatField(blank=True, null=True)),
                ('frequency', models.FloatField(blank=True, null=True)),
                ('u_dc', models.FloatField(blank=True, null=True)),
                ('i_dc', models.FloatField(blank=True, null=True)),
                ('i_dc_1', models.FloatField(blank=True, null=True)),
                ('i_dc_2', models.FloatField(blank=True, null=True)),
                ('i_dc_3', models.FloatField(blank=True, null=True)),
                ('i_dc_4', models.FloatField(blank=True, null=True)),
                ('i_dc_5', models.FloatField(blank=True, null=True)),
                ('i_dc_6', models.FloatField(blank=True, null=True)),
                ('i_dc_7', models.FloatField(blank=True, null=True)),
                ('i_dc_8', models.FloatField(blank=True, null=True)),
                ('i_dc_9', models.FloatField(blank=True, null=True)),
                ('p_dc', models.FloatField(blank=True, null=True)),
                ('up_to_energy', models.FloatField(blank=True, null=True)),
                ('iso_resistance', models.FloatField(blank=True, null=True)),
                ('total_energy', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'inverter_data_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LegalEntities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=70, null=True)),
                ('short_name', models.CharField(blank=True, max_length=20, null=True)),
                ('edrpou', models.CharField(max_length=8)),
                ('x_code', models.CharField(blank=True, db_column='x-code', max_length=16, null=True)),
            ],
            options={
                'db_table': 'legal_entities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SatecData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_utc', models.DateTimeField()),
                ('cosphi_1', models.FloatField(blank=True, null=True)),
                ('cosphi_2', models.FloatField(blank=True, null=True)),
                ('cosphi_3', models.FloatField(blank=True, null=True)),
                ('frequency', models.FloatField(blank=True, null=True)),
                ('i_1', models.FloatField(blank=True, null=True)),
                ('i_2', models.FloatField(blank=True, null=True)),
                ('i_3', models.FloatField(blank=True, null=True)),
                ('u_1', models.FloatField(blank=True, null=True)),
                ('u_2', models.FloatField(blank=True, null=True)),
                ('u_3', models.FloatField(blank=True, null=True)),
                ('p_1', models.FloatField(blank=True, null=True)),
                ('p_2', models.FloatField(blank=True, null=True)),
                ('p_3', models.FloatField(blank=True, null=True)),
                ('p_total', models.FloatField(blank=True, null=True)),
                ('q_1', models.FloatField(blank=True, null=True)),
                ('q_2', models.FloatField(blank=True, null=True)),
                ('q_3', models.FloatField(blank=True, null=True)),
                ('q_total', models.FloatField(blank=True, null=True)),
                ('device_id', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'satec_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SatecHourlyData',
            fields=[
                ('id', models.CharField(max_length=250, primary_key=True, serialize=False, unique=True)),
                ('timestamp_utc', models.DateTimeField()),
                ('cosphi_1', models.FloatField(blank=True, null=True)),
                ('cosphi_2', models.FloatField(blank=True, null=True)),
                ('cosphi_3', models.FloatField(blank=True, null=True)),
                ('frequency', models.FloatField(blank=True, null=True)),
                ('i_1', models.FloatField(blank=True, null=True)),
                ('i_2', models.FloatField(blank=True, null=True)),
                ('i_3', models.FloatField(blank=True, null=True)),
                ('u_1', models.FloatField(blank=True, null=True)),
                ('u_2', models.FloatField(blank=True, null=True)),
                ('u_3', models.FloatField(blank=True, null=True)),
                ('p_1', models.FloatField(blank=True, null=True)),
                ('p_2', models.FloatField(blank=True, null=True)),
                ('p_3', models.FloatField(blank=True, null=True)),
                ('p_total', models.FloatField(blank=True, null=True)),
                ('q_1', models.FloatField(blank=True, null=True)),
                ('q_2', models.FloatField(blank=True, null=True)),
                ('q_3', models.FloatField(blank=True, null=True)),
                ('q_total', models.FloatField(blank=True, null=True)),
                ('device_id', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'satec_hourly_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sites',
            fields=[
                ('id', models.CharField(max_length=250, primary_key=True, serialize=False, unique=True)),
                ('full_name', models.CharField(max_length=100)),
                ('short_name', models.CharField(max_length=20)),
                ('location', models.TextField()),
                ('legal_entity', models.IntegerField()),
                ('region', models.CharField(blank=True, max_length=20, null=True)),
                ('installed_capacity_dc', models.IntegerField(blank=True, null=True)),
                ('installed_capacity_ac', models.IntegerField(blank=True, null=True)),
                ('displayable_name', models.CharField(blank=True, max_length=20, null=True)),
                ('w_code', models.CharField(blank=True, db_column='w-code', max_length=16, null=True)),
                ('cells_area', models.IntegerField(blank=True, null=True)),
                ('modules_area', models.IntegerField(blank=True, null=True)),
                ('gpee_code', models.CharField(blank=True, max_length=6, null=True)),
            ],
            options={
                'db_table': 'sites',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.CharField(max_length=250, primary_key=True, serialize=False, unique=True)),
                ('device_id', models.CharField(max_length=20)),
                ('timestamp_utc', models.DateTimeField()),
                ('ambient_temperature', models.FloatField(blank=True, null=True)),
                ('module_temperature', models.FloatField(blank=True, null=True)),
                ('irradiance_hor', models.FloatField(blank=True, null=True)),
                ('irradiance_poa', models.FloatField(blank=True, null=True)),
                ('wind_vel', models.FloatField(blank=True, null=True)),
                ('wind_dir', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'weather_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WeatherHourlyData',
            fields=[
                ('id', models.CharField(max_length=250, primary_key=True, serialize=False, unique=True)),
                ('device_id', models.CharField(max_length=20)),
                ('timestamp_utc', models.DateTimeField()),
                ('ambient_temperature', models.FloatField(blank=True, null=True)),
                ('module_temperature', models.FloatField(blank=True, null=True)),
                ('irradiance_hor', models.FloatField(blank=True, null=True)),
                ('irradiance_poa', models.FloatField(blank=True, null=True)),
                ('wind_vel', models.FloatField(blank=True, null=True)),
                ('wind_dir', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'weather_hourly_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Meters',
            fields=[
                ('id', models.CharField(max_length=250, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('is_border', models.BooleanField()),
                ('z_code', models.CharField(blank=True, max_length=20, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=30, null=True)),
                ('parameter', models.CharField(blank=True, max_length=2, null=True)),
                ('is_active', models.BooleanField(blank=True, null=True)),
                ('site', models.ForeignKey(blank=True, db_column='site', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='initial_pv_data.sites')),
            ],
            options={
                'db_table': 'meters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeterP30Data',
            fields=[
                ('id', models.CharField(max_length=250, primary_key=True, serialize=False, unique=True)),
                ('date', models.DateField()),
                ('day_total', models.IntegerField(blank=True, null=True)),
                ('number_1', models.IntegerField(blank=True, db_column='1', null=True)),
                ('number_2', models.IntegerField(blank=True, db_column='2', null=True)),
                ('number_3', models.IntegerField(blank=True, db_column='3', null=True)),
                ('number_4', models.IntegerField(blank=True, db_column='4', null=True)),
                ('number_5', models.IntegerField(blank=True, db_column='5', null=True)),
                ('number_6', models.IntegerField(blank=True, db_column='6', null=True)),
                ('number_7', models.IntegerField(blank=True, db_column='7', null=True)),
                ('number_8', models.IntegerField(blank=True, db_column='8', null=True)),
                ('number_9', models.IntegerField(blank=True, db_column='9', null=True)),
                ('number_10', models.IntegerField(blank=True, db_column='10', null=True)),
                ('number_11', models.IntegerField(blank=True, db_column='11', null=True)),
                ('number_12', models.IntegerField(blank=True, db_column='12', null=True)),
                ('number_13', models.IntegerField(blank=True, db_column='13', null=True)),
                ('number_14', models.IntegerField(blank=True, db_column='14', null=True)),
                ('number_15', models.IntegerField(blank=True, db_column='15', null=True)),
                ('number_16', models.IntegerField(blank=True, db_column='16', null=True)),
                ('number_17', models.IntegerField(blank=True, db_column='17', null=True)),
                ('number_18', models.IntegerField(blank=True, db_column='18', null=True)),
                ('number_19', models.IntegerField(blank=True, db_column='19', null=True)),
                ('number_20', models.IntegerField(blank=True, db_column='20', null=True)),
                ('number_21', models.IntegerField(blank=True, db_column='21', null=True)),
                ('number_22', models.IntegerField(blank=True, db_column='22', null=True)),
                ('number_23', models.IntegerField(blank=True, db_column='23', null=True)),
                ('number_24', models.IntegerField(blank=True, db_column='24', null=True)),
                ('number_25', models.IntegerField(blank=True, db_column='25', null=True)),
                ('number_26', models.IntegerField(blank=True, db_column='26', null=True)),
                ('number_27', models.IntegerField(blank=True, db_column='27', null=True)),
                ('number_28', models.IntegerField(blank=True, db_column='28', null=True)),
                ('number_29', models.IntegerField(blank=True, db_column='29', null=True)),
                ('number_30', models.IntegerField(blank=True, db_column='30', null=True)),
                ('number_31', models.IntegerField(blank=True, db_column='31', null=True)),
                ('number_32', models.IntegerField(blank=True, db_column='32', null=True)),
                ('number_33', models.IntegerField(blank=True, db_column='33', null=True)),
                ('number_34', models.IntegerField(blank=True, db_column='34', null=True)),
                ('number_35', models.IntegerField(blank=True, db_column='35', null=True)),
                ('number_36', models.IntegerField(blank=True, db_column='36', null=True)),
                ('number_37', models.IntegerField(blank=True, db_column='37', null=True)),
                ('number_38', models.IntegerField(blank=True, db_column='38', null=True)),
                ('number_39', models.IntegerField(blank=True, db_column='39', null=True)),
                ('number_40', models.IntegerField(blank=True, db_column='40', null=True)),
                ('number_41', models.IntegerField(blank=True, db_column='41', null=True)),
                ('number_42', models.IntegerField(blank=True, db_column='42', null=True)),
                ('number_43', models.IntegerField(blank=True, db_column='43', null=True)),
                ('number_44', models.IntegerField(blank=True, db_column='44', null=True)),
                ('number_45', models.IntegerField(blank=True, db_column='45', null=True)),
                ('number_46', models.IntegerField(blank=True, db_column='46', null=True)),
                ('number_47', models.IntegerField(blank=True, db_column='47', null=True)),
                ('number_48', models.IntegerField(blank=True, db_column='48', null=True)),
                ('number_49', models.IntegerField(blank=True, db_column='49', null=True)),
                ('number_50', models.IntegerField(blank=True, db_column='50', null=True)),
                ('meter', models.ForeignKey(db_column='meter', on_delete=django.db.models.deletion.DO_NOTHING, to='initial_pv_data.meters')),
            ],
            options={
                'db_table': 'meter_p30_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ForecastsApplied',
            fields=[
                ('id', models.CharField(max_length=250, primary_key=True, serialize=False, unique=True)),
                ('date', models.DateField()),
                ('time_indexes_utc', django.contrib.postgres.fields.ArrayField(base_field=models.DateTimeField(), blank=True, size=None)),
                ('energy', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, size=None)),
                ('is_initial', models.BooleanField()),
                ('site', models.ForeignKey(db_column='site', on_delete=django.db.models.deletion.DO_NOTHING, to='initial_pv_data.sites')),
            ],
            options={
                'db_table': 'forecasts_applied',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('date', models.DateField()),
                ('time_indexes_utc', django.contrib.postgres.fields.ArrayField(base_field=models.DateTimeField(), blank=True, size=None)),
                ('energy', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, size=None)),
                ('version', models.IntegerField()),
                ('site', models.ForeignKey(db_column='site', on_delete=django.db.models.deletion.DO_NOTHING, to='initial_pv_data.sites')),
            ],
            options={
                'db_table': 'balance',
                'managed': True,
            },
        ),
    ]
